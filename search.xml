<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>字节前端青训营：Linux基础</title>
      <link href="/2023/04/15/Linux%E5%9F%BA%E7%A1%80%EF%BC%88%E9%9D%92%E8%AE%AD%EF%BC%89/"/>
      <url>/2023/04/15/Linux%E5%9F%BA%E7%A1%80%EF%BC%88%E9%9D%92%E8%AE%AD%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h3 id="一-计算机硬件">一.计算机硬件</h3><p><strong>计算机由五大基本单元组成：控制器，运算器，存储器，输入输出两个单元</strong></p><p><strong>1.控制器</strong>:协调和指挥计算机各个部件进行按需作业</p><p><strong>2.运算器</strong>:算数与逻辑运算的处理</p><p><strong>3.存储器</strong>:内存和外存，磁盘光驱属于外存</p><p><strong>4.输入单元</strong>:鼠标，键盘等</p><p><strong>5.输出单元</strong>:显示器，音响等</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C%E4%BA%94%E5%A4%A7%E7%BB%84%E6%88%90%E9%83%A8%E5%88%86.png" alt="图片"></p><h3 id="二-计算机操作系统">二.计算机操作系统</h3><p>1.<strong>操作系统</strong>（<strong>O</strong>perating <strong>S</strong>ystem，<strong>OS</strong>）：管理和控制计算机系统中的硬件和软件资源，用于在用户和系统硬件之间传递消息</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5Cimage.png" alt="图片"></p><p>**2.操作系统启动程序：**操作系统的启动分为传统模式，也就是基于bios的启动流程，另一种是当前的主流模式，也就是基于UEFI的启动流程。BIOS或者UEFI其实就是一段固化在主板上的程序，计算机启动时会默认运行这段程序，然后通过这段程序去运行主板引导项，UEFI是BIOS流程的升级版本，解决优化了BIOS启ootloader也就是操作系统引导程序，然后通过引导初始化操作系统。比如优化了BIOS自检流程，然后BIOS启动会配合MBR分区，无法引导启动超过2.2T的磁盘。而UEFI一般配合GPT分区，支持引导超过2.2T的磁盘。</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C1.png" alt="图片"></p><h3 id="三-Linux系统概览">三.Linux系统概览</h3><p>**1.Linux版本：**内核版本+发行版本，其中Linux内核加常用软件为Linux发行版本。</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C2.png" alt="图片"></p><p><strong>2.查看Linux系统内核版本：</strong></p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C3.png" alt="图片"></p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C4.png" alt="图片"></p><p><strong>3.Linux系统应用领域：</strong></p><p>IT服务器（操作系统，虚拟化和云计算)，嵌入式和智能设备，个人办公桌面，学术研究和软件开发</p><h3 id="四-Linux系统结构">四.Linux系统结构</h3><p>**1.四个组成部分：**内核，shell，文件系统，应用程序</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C5.png" alt="图片"></p><h4 id="4-2-Linux系统结构–进程管理">4.2.Linux系统结构–进程管理</h4><p>**2.Linux体系结构：**内核是硬件和软件的一个中间层，是一个资源管理系统，提供一组面向系统的命令</p><p>体系结构子目录都包含许多其他子目录，这些子目录专注于内核的特定方面，如引导，内核，内存管理等</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C6.png" alt="图片"></p><p><strong>3.进程管理</strong></p><p>1.进程：是一个正在执行的一个程序或者命令，有自己的地址空间，占用一定的系统资源。一个CPU核同一时间只能运行一个进程，进程由它的进程ID（PID）和它父进程的进程ID（PPID）唯一识别</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C7.png" alt="图片"></p><p><strong>2.查看进程信息：</strong></p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C8.png" alt="图片"></p><p>**3.进程调度：**进程调度是指操作系统按某种策略或者规则选择进程占用CPU进行运行的过程</p><ul><li><p>R(TASK_RUNNING) 可执行状态</p></li><li><p>S(TASK_INTERRUPTIBLE) 可中断的睡眠状态</p></li><li><p>D(TASK_UNINTERRUPTIBLE) 不可中断的睡眠状态</p></li><li><p>T(TASK_STOPPED OR TASK_TRACED) 暂停或者跟踪状态</p></li><li><p>Z(TASK_DEAD-EXIT_ZOMBIE) 退出状态，进程变为僵尸进程</p></li><li><p>X(TASK_DEAD-EXIT_DEAD) 退出状态，进程即将被销毁</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C9.png" alt="图片"></p></li></ul><p><strong>4.进程调度原则</strong></p><ul><li>一个CPU核同一时间只能运行一个进程</li><li>每个进程有近乎相等的执行时间</li><li>对于逻辑CPU而言进程调度使用轮询的方式执行，当轮询完成则回到第一个进程反复</li><li>进程执行消耗时间和进程量成正比</li></ul><p><strong>5.进程的系统调用</strong></p><p>内核空间（Kernal Space):系统内核运行的空间</p><p>用户空间（User Space):应用程序运行的空间</p><p>当进程运行在内核空间时就处于内核态，二进程运行在用户空间时则处于用户态</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C10.png" alt="图片"></p><h4 id="4-3Linux系统结构–文件系统">4.3Linux系统结构–文件系统</h4><p><strong>1.文件系统</strong>：文件系统负责管理持久化数据的子系统，负责把用户的文件存到磁盘硬件中，这样做最明显的好处是开发者仅需要一套API和开发工具即可调取Linux系统中绝大部分的资源。举个例子来说，Linux中几乎所有读（读文件，读系统状态读socket，读PIPE）的操作都可以用read函数来进行，几乎所有更改（更改文件，更改系统参数，写socket，写PIPE）的操作都可以用write函数来进行，使用任何硬件设备都必须与根目录下某一目录执行挂载操作</p><p><strong>2.存储</strong>：Linux文件系统是采用树状的目录结构，最上层是/（根）目录</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C11.png" alt="图片"></p><p><strong>/bin:</strong>  bin是Binaries(二进制文件)的缩写，这个目录存放着最经常使用的命令</p><p><strong>/boot:</strong>  这里存放的是启动Linux时使用的一些核心文件，包括一些链接文件以及镜像文件</p><p>**/dev: ** dev是Device（设备）的缩写，该目录下存放的是Linux的外部设备，在Linux中访问设备的方式和访问文件的方式是相同的</p><p>**/etc：**etc是Etcetera(等等)的缩写，这个目录用来存放所有的系统管理所需要的配置文件和子目录</p><p><strong>/home:</strong> 用户的主目录，在Linux中每个用户都有自己的一个目录，一般该目录名是以用户的账号命名的</p><p><strong>/lib:</strong>  lib是Library（库）的缩写，这个目录里存放着系统最基本的动态连接共享库，其作用类似于Windows里的DLL文件，几乎所有的应用程序都需要用到这些共享库</p><p><strong>/mnt:</strong>  系统提供该目录是为了让用户临时挂载别的文件系统的，我们可以将光驱挂载在/mnt/上，然后进入该目录就可以查看光驱里面的内容了</p><p><strong>/opt:</strong> opt是optional（可选）的缩写，这是给主机额外安装软件所摆放的目录，比如你安装一个ORACLE数据库则可以放在这个目录下，默认是空的</p><p><strong>/proc:</strong> proc是processes（进程）的缩写，/proc是一种伪系统文件（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，这个目录是一个虚拟的目录，它是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息</p><p><strong>/root:</strong> 该目录为系统管理员，也称作超级权限者的用户主目录</p><p><strong>/sbin:</strong> s是super user的意思，是Superuser Binaries(超级用户的二进制文件)的缩写，这里存放的是系统管理员使用的系统管理程序</p><p><strong>/usr:</strong> usr是unix shared resources（共享资源）的缩写，这是一个非常重要的目录，用户的很多应用程序和文件都放在这个目录下，类似于Windows下的program files目录</p><p><strong>3.虚拟文件系统（VFS）</strong>：</p><ul><li>对应用层提供一个标准的文件操作接口</li><li>对文件系统提供一个标准的文件接入接口</li></ul><p>虚拟系统文件系统使得Linux可以存在多个“实际的文件系统”，比如分区是1是ext2，分区2是ext3，分区3是fat32，那么每个“实际的文件系统”的结构和操作方式是不一样的。VFS作为中间层，用户直接控制VFS，VFS再控制各个文件系统</p><p><strong>4.查看文件系统类型</strong></p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C12.png" alt="图片"></p><p><strong>5.文件基本操作</strong></p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C13.png" alt="图片"></p><p><strong>6.文件读取流程</strong></p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C14.png" alt="图片"></p><h4 id="4-4Linux系统结构–用户权限">4.4Linux系统结构–用户权限</h4><p><strong>1.用户账户</strong>：Linux是一个多用户的系统，可以多个用户登陆Linux</p><ul><li><p>用户账户</p><p>普通用户账户：在系统中进行普通作业</p><p>超级用户账户：在系统中对普通用户和整个系统进行管理</p></li><li><p>用户组</p><p>标准组：可以容纳多个用户</p><p>私有组：只有用户自己</p></li></ul><p><strong>2.文件权限：</strong></p><p>文件权限关于用户有三个概念：</p><p>所有组：文件的所有者</p><p>所在组：文件的所有者所在的组</p><p>其他人：除文件所有者及所在组外的其他人</p><p>每个用户对于文件都有不同权限，读R，写W，执行X</p><p><strong>3.查看用户信息</strong></p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C15.png" alt="图片"></p><p><strong>4.用户权限操作</strong></p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C16.png" alt="图片"></p><h3 id="五-Linux软件包操作">五.Linux软件包操作</h3><p><strong>1.软件包</strong>：</p><ul><li><p>软件包：通常指的是一个应用程序，他可以是一个GUI应用程序，命令行工具或者（其他软件程序需要的）软件库</p></li><li><p>软件包管理：</p><p>底层工具：主要用来处理安装和删除软件包文件等任务，DPKG，RPM</p><p>上层工具：主要用于数据的搜索任务和依赖解析任务，APT，YUM，DNF</p><p>YUM可以自动下载并安装所有需要的依赖项，但是RPM会告诉你安装一个依赖列表，然后你必须手动安装</p></li></ul><p><strong>2.软件包安装工具：</strong></p><p>RPM（Red Hat Package Manager),为Red Hat操作系统的包管理系统</p><p>DPKG（Debian package），为Debian操作系统的包管理系统</p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C17.png" alt="图片"></p><p><strong>3.Debian Apt常用命令：</strong></p><ul><li>列出所有可更新的软件清单命令：apt update</li><li>安装指定的软件命令：apt install&lt;package_name&gt;</li><li>安装多个软件包： apt install &lt;package_1&gt; &lt;package_2&gt; &lt;package_3&gt;</li><li>更新指定的软件命令：apt update &lt;package_name&gt;</li><li>删除软件包命令：apt remove &lt;package_name&gt;</li><li>查找软件包命令：apt search &lt;key_word&gt;</li><li>列出所有已安装的包：apt list --installed</li></ul><p><strong>4.nginx安装</strong></p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C18.png" alt="图片"></p><p><strong>5.nginx配置</strong></p><p><img src="..%5C%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%A1%AC%E4%BB%B6%5C19.png" alt="图片"></p>]]></content>
      
      
      <categories>
          
          <category> 字节前端训练营 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> linux基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
